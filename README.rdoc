== Mangrove validation tool

A tool to allow users to validate and improve the accuracy of our mangrove and coral datasets.

== Setup

You'll need to create a cartodb_config.yml file and place it into config directory:

  host: '<your cartodb host>'
  oauth_key: 'oauthkey'
  oauth_secret: 'oauthsecret'
  username: 'username'
  password: 'password'

Also, you'll need to create an http_auth_config.yml:

  development:
    admins:
      -
        login: 'login'
        password: 'password'

== Redis & Resque

You need redis-server installed and running. Default redis config is in config/resque.yml.

To get the workers running:

  QUEUE=download_serve rake resque:work

With debug and verbose:

  VVERBOSE=1 QUEUE=download_serve bundle exec rake resque:work

You can view the status of resque jobs in the browser using the resque-web tool.

== CartoDB SQL

SQL to create the initial database on CartoDB:

  -- Import data
  INSERT INTO gid_development_copy (the_geom, status, polygon_id, name, name_local, iso_3) (SELECT the_geom, 'original' AS status, id AS polygon_id, name, name_local, iso_3 FROM gid_import_1_100000);
  INSERT INTO gid_development_copy (the_geom, status, polygon_id, name, name_local, iso_3) (SELECT the_geom, 'original' AS status, id AS polygon_id, name, name_local, iso_3 FROM gid_import_100001_200000);
  INSERT INTO gid_development_copy (the_geom, status, polygon_id, name, name_local, iso_3) (SELECT the_geom, 'original' AS status, id AS polygon_id, name, name_local, iso_3 FROM gid_import_200001_300000);
  INSERT INTO gid_development_copy (the_geom, status, polygon_id, name, name_local, iso_3) (SELECT the_geom, 'original' AS status, id AS polygon_id, name, name_local, iso_3 FROM gid_import_300001_464020);

  -- Create island_ids (for rows with name not empty)
  UPDATE gid_development_copy SET island_id = (SELECT MIN(cartodb_id) FROM gid_development_copy AS b WHERE gid_development_copy.name=b.name AND gid_development_copy.name_local=b.name_local AND gid_development_copy.iso_3=b.iso_3 GROUP BY name, name_local, iso_3) WHERE name != ' ' AND cartodb_id <= 100000;

  !!

  UPDATE gid_development_copy SET island_id = g.group_id FROM (SELECT MIN(cartodb_id) AS group_id, min(name) AS gname, min(name_local) AS gname_local, min(iso_3) as giso_3 FROM gid_development_copy AS b GROUP BY name, name_local, iso_3) AS g
  WHERE name != ' ' AND name = g.gname AND name_local = g.gname_local AND iso_3 = g.giso_3

  -- Create island_ids (for rows with empty names)
